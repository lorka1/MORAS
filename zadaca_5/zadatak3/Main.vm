function Main.main 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push constant 255
push constant 0
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 0
push constant 0
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 255
push constant 0
push constant 255
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 255
push constant 255
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 128
push constant 0
push constant 128
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 128
push constant 255
push constant 128
call Screen.drawLine 4
pop temp 0
call Main.drawFunction 0
pop temp 0
push constant 0
return
function Main.drawFunction 6
push constant 0
pop local 3
push constant 0
pop local 4
label WHILE_EXP0
push local 3
push constant 256
lt
not
if-goto WHILE_END0
push local 3
push constant 64
call Math.multiply 2
push constant 256
call Math.divide 2
pop local 0
push local 0
push constant 32
sub
call Main.f 1
push constant 32
add
pop local 1
push local 0
push constant 31
sub
call Main.f 1
push constant 32
add
pop local 2
push local 1
push constant 4
call Math.multiply 2
push local 2
push local 1
sub
push local 4
call Math.multiply 2
add
pop local 5
push local 3
push local 5
call Screen.drawPixel 2
pop temp 0
push local 3
push constant 1
add
pop local 3
push local 4
push constant 1
add
pop local 4
push local 4
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 4
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Main.f 0
push argument 0
push argument 0
call Math.multiply 2
push constant 32
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
goto IF_END0
label IF_FALSE0
push argument 0
push argument 0
call Math.multiply 2
return
label IF_END0
