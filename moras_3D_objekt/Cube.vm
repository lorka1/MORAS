function Cube.new 0
push constant 13
call Memory.alloc 1
pop pointer 0
push constant 256
pop this 9
push constant 128
pop this 8
push constant 50
pop this 1
push constant 3
pop this 10
push constant 2
pop this 11
push this 9
pop this 2
push this 8
pop this 3
push constant 0
pop this 4
push this 2
pop this 5
push this 3
pop this 6
push this 4
pop this 7
push constant 200
pop this 12
push constant 8
push constant 3
call Math.multiply 2
call Array.new 1
pop static 0
push pointer 0
call Cube.initializeVertices 1
pop temp 0
call Trig.new 0
pop this 0
push pointer 0
return
function Cube.initializeVertices 2
push argument 0
pop pointer 0
push this 1
push constant 2
call Math.divide 2
pop local 0
push this 1
push constant 4
call Math.divide 2
pop local 1
push constant 0
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push constant 3
call Math.multiply 2
push static 0
add
push this 5
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
push this 6
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
push this 7
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cube.rotateX 4
push argument 0
pop pointer 0
push this 0
push argument 4
call Trig.cos 2
pop local 1
push this 0
push argument 4
call Trig.sin 2
pop local 0
push argument 2
push this 6
sub
pop argument 2
push argument 3
push this 7
sub
pop argument 3
push argument 2
push local 1
call Math.multiply 2
push argument 3
push local 0
call Math.multiply 2
sub
push constant 100
call Math.divide 2
pop local 2
push argument 2
push local 0
call Math.multiply 2
push argument 3
push local 1
call Math.multiply 2
add
push constant 100
call Math.divide 2
pop local 3
push constant 0
push argument 5
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 5
add
push local 2
push this 6
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 5
add
push local 3
push this 7
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cube.rotateY 4
push argument 0
pop pointer 0
push this 0
push argument 4
call Trig.cos 2
pop local 1
push this 0
push argument 4
call Trig.sin 2
pop local 0
push argument 1
push this 5
sub
pop argument 1
push argument 3
push this 7
sub
pop argument 3
push argument 3
push local 0
call Math.multiply 2
push argument 1
push local 1
call Math.multiply 2
add
push constant 100
call Math.divide 2
pop local 2
push argument 3
push local 1
call Math.multiply 2
push argument 1
push local 0
call Math.multiply 2
sub
push constant 100
call Math.divide 2
pop local 3
push constant 0
push argument 5
add
push local 2
push this 5
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 5
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 5
add
push local 3
push this 7
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cube.rotateZ 4
push argument 0
pop pointer 0
push this 0
push argument 4
call Trig.cos 2
pop local 1
push this 0
push argument 4
call Trig.sin 2
pop local 0
push argument 1
push this 5
sub
pop argument 1
push argument 2
push this 6
sub
pop argument 2
push argument 1
push local 1
call Math.multiply 2
push argument 2
push local 0
call Math.multiply 2
sub
push constant 100
call Math.divide 2
pop local 2
push argument 1
push local 0
call Math.multiply 2
push argument 2
push local 1
call Math.multiply 2
add
push constant 100
call Math.divide 2
pop local 3
push constant 0
push argument 5
add
push local 2
push this 5
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 5
add
push local 3
push this 6
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 5
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cube.rotate 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
push constant 1
push argument 1
add
pop pointer 1
push that 0
push constant 2
push argument 1
add
pop pointer 1
push that 0
push argument 2
push argument 1
call Cube.rotateX 6
pop temp 0
push pointer 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
push constant 1
push argument 1
add
pop pointer 1
push that 0
push constant 2
push argument 1
add
pop pointer 1
push that 0
push argument 3
push argument 1
call Cube.rotateY 6
pop temp 0
push pointer 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
push constant 1
push argument 1
add
pop pointer 1
push that 0
push constant 2
push argument 1
add
pop pointer 1
push that 0
push argument 4
push argument 1
call Cube.rotateZ 6
pop temp 0
push constant 0
return
function Cube.project 6
push argument 0
pop pointer 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
push this 5
sub
pop local 0
push constant 1
push argument 1
add
pop pointer 1
push that 0
push this 6
sub
pop local 1
push constant 2
push argument 1
add
pop pointer 1
push that 0
push this 7
sub
pop local 2
push this 12
push local 2
sub
pop local 5
push local 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 5
label IF_FALSE0
push local 0
push this 12
call Math.multiply 2
push local 5
call Math.divide 2
pop local 3
push local 1
push this 12
call Math.multiply 2
push local 5
call Math.divide 2
pop local 4
push constant 0
push argument 1
add
push local 3
push this 10
call Math.multiply 2
push this 5
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 1
add
push local 4
push this 11
call Math.multiply 2
push this 6
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cube.draw 20
push argument 0
pop pointer 0
push this 1
push constant 2
call Math.divide 2
pop local 0
push constant 8
push constant 3
call Math.multiply 2
call Array.new 1
pop local 1
push constant 3
call Array.new 1
pop local 2
push constant 0
pop local 19
label WHILE_EXP0
push local 19
push constant 8
lt
not
if-goto WHILE_END0
push constant 0
push local 2
add
push local 19
push constant 3
call Math.multiply 2
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push local 19
push constant 3
call Math.multiply 2
push constant 1
add
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 2
add
push local 19
push constant 3
call Math.multiply 2
push constant 2
add
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 2
push argument 1
push argument 2
push argument 3
call Cube.rotate 5
pop temp 0
push pointer 0
push local 2
call Cube.project 2
pop temp 0
push local 19
push constant 3
call Math.multiply 2
push local 1
add
push constant 0
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 19
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
push constant 1
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 19
push constant 3
call Math.multiply 2
push constant 2
add
push local 1
add
push constant 2
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 19
push constant 1
add
pop local 19
goto WHILE_EXP0
label WHILE_END0
push constant 0
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 3
push constant 1
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 4
push constant 2
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 5
push constant 3
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 6
push constant 4
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 7
push constant 5
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 8
push constant 6
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 9
push constant 7
push constant 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 10
push constant 0
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 11
push constant 1
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 12
push constant 2
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 13
push constant 3
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 14
push constant 4
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 15
push constant 5
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 16
push constant 6
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 17
push constant 7
push constant 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 18
push local 3
push local 11
push local 4
push local 12
call Screen.drawLine 4
pop temp 0
push local 4
push local 12
push local 5
push local 13
call Screen.drawLine 4
pop temp 0
push local 5
push local 13
push local 6
push local 14
call Screen.drawLine 4
pop temp 0
push local 6
push local 14
push local 3
push local 11
call Screen.drawLine 4
pop temp 0
push local 7
push local 15
push local 8
push local 16
call Screen.drawLine 4
pop temp 0
push local 8
push local 16
push local 9
push local 17
call Screen.drawLine 4
pop temp 0
push local 9
push local 17
push local 10
push local 18
call Screen.drawLine 4
pop temp 0
push local 10
push local 18
push local 7
push local 15
call Screen.drawLine 4
pop temp 0
push local 7
push local 15
push local 3
push local 11
call Screen.drawLine 4
pop temp 0
push local 8
push local 16
push local 4
push local 12
call Screen.drawLine 4
pop temp 0
push local 9
push local 17
push local 5
push local 13
call Screen.drawLine 4
pop temp 0
push local 10
push local 18
push local 6
push local 14
call Screen.drawLine 4
pop temp 0
push local 1
call Array.dispose 1
pop temp 0
push local 2
call Array.dispose 1
pop temp 0
push constant 0
return
function Cube.dispose 0
push argument 0
pop pointer 0
push this 0
call Trig.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
